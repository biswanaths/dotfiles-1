#!/usr/bin/env bash
bold=`tput bold`
norm=`tput sgr0`

# Ask for user permission first
echo -e "\n${bold}This script will automatically install essential tools and"
echo "link files from this folder to $HOME."
echo "Do you wish to proceed?${norm}"
select yn in "Yes" "No"; do
case $yn in
    Yes ) echo "Proceeding with installation..." && break;;
    No ) echo "Fine. Exiting..." && exit;;
esac
done

# Install linux tools.
if [ `uname` == "Linux" ]; then
    if [ -f /etc/debian_version ]; then
        # Just so it doesn't try to run this on any other system.
        echo "${bold}Detected Debian-based system. Installing tools with apt-get...${norm}"
        sleep 2
        echo -e "\nGo get some coffee, this might take a while..."
        cd ~/dotfiles
        sudo apt-get install -y zsh zsh-dev build-essential mercurial curl \
        xclip libncurses5-dev libgnome2-dev libgnomeui-dev docky suckless-tools \
        libgtk2.0-dev libatk1.0-dev libbonoboui2-dev tig gnome-terminal \
        libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev ruby-dev \
        autojump exuberant-ctags git ruby texinfo libbz2-dev libcurl4-openssl-dev \
        libexpat-dev libncurses-dev zlib1g-dev silversearcher-ag
        cd ~/Downloads/

        # Set up tomorrow-night for gnome-terminal
        echo "${bold}Installing tomorrow-night colorscheme for gnome-terminal...${norm}"
        curl -O https://raw.githubusercontent.com/chriskempson/tomorrow-theme/master/Gnome-Terminal/setup-theme.sh
        chmod +x setup-theme.sh
        ./setup-theme.sh
        cd $HOME
    fi

    # Setup linux brew
    if [ -d ~/.linuxbrew ]; then
        echo -e "\n${bold}It looks like linuxbrew is already installed. Skipping...${norm}"
    else
        echo -e "\n${bold}Installing linuxbrew...${norm}"
        git clone https://github.com/Homebrew/linuxbrew.git ~/.linuxbrew
    fi

    # Install tmux from linuxbrew.
    echo -e "\n${bold}Installing tmux with linuxbrew...${norm}"
    brew install tmux
    echo -e "\n${bold}Finished installing tmux.${norm}"

    # Install vim from linuxbrew.
    echo -e "\n${bold}Installing vim...${norm}"
    brew install vim --HEAD --with-perl --disable-nls
    echo -e "\n${bold}Vim is installed!${norm}"

    # Symlink vim stuff
    echo "${bold}Linking vim...${norm}"
    /bin/ln -sfv ~/dotfiles/.vimrc $HOME
    /bin/ln -snfv ~/dotfiles/.vim $HOME

    if [ -d ~/.vim/bundle/Vundle.vim ]; then
        echo -e "\n${bold}Vundle is already installed. Updating Vim plugins instead...${norm}"
        sleep 3
        vim +PluginUpdate +qa
        echo -e "\n${bold}Vim plugins have been brought up to date.${norm}"
    else
        echo "Cloning Vundle..."
        rm -rf ~/.vim/bundle/ ; git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
        mkdir -p ~/.vim/backup/undo
        vim +PluginInstall +qa
        echo "${bold}Vim plugins installed!${norm}"
    fi

    # Zsh
    echo "${bold}Linking zsh...${norm}"
    /bin/ln -sfv ~/dotfiles/.zshrc $HOME
    /bin/ln -snfv ~/dotfiles/.zsh $HOME
    rm -rf ~/.zsh/zsh-* ~/.zsh/opp.zsh
    echo "${bold}Cloning zsh plugins...${norm}"
    cd ~/.zsh && git clone https://github.com/zsh-users/zsh-history-substring-search.git
    git clone git://github.com/zsh-users/zsh-syntax-highlighting.git
    git clone https://github.com/hchbaw/opp.zsh.git && cd $HOME

    # Tmux
    echo "${bold}Linking tmux...${norm}"
    /bin/ln -sfv ~/dotfiles/.tmux.conf $HOME

    # Tig
    echo "${bold}Linking tig...${norm}"
    /bin/ln -sfv ~/dotfiles/.tigrc $HOME

    # User scripts folder
    echo "${bold}Linking user scripts folder...${norm}"
    /bin/ln -snfv ~/dotfiles/.bin $HOME

    # Remap caps lock to control
    echo -e "\n${bold}Remapping caps lock to control${norm}"
    setxkbmap -option ctrl:nocaps

    echo -e "\n${bold}Done!${norm}"
fi
